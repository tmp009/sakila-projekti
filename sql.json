{
    "getMovieByCategory":[
       "select f.film_id,",
       "f.title,",
        "c.name as category,",
        "description,",
        "f.replacement_cost as price",
        "from film as f, film_category as fc",
        "left outer join category as c on c.category_id = fc.category_id",
        "where fc.film_id=f.film_id and upper(c.name)=upper(?)",
        "order by f.title ASC",
        "limit 10",
        "offset ?"
    ],
    "getMovie":[
        "select f.film_id,",
        "f.title, ",
        "c.name as category,",
        "description,",
        "f.replacement_cost as price",
        "from film as f, film_category as fc ",
        "left outer join category as c on c.category_id = fc.category_id",
        "where fc.film_id=f.film_id",
        "order by f.title ASC",
        "limit 10",
        "offset ?"
    ],
    "getMovieById":[
        "select ",
        "f.film_id, ",
        "f.title, ",
        "c.name as category,",
        "description,",
        "f.replacement_cost as price,",
        "release_year as year,",
        "lang.name as language",
        "from",
        "film as f, ",
       " film_category as fc,",
        "language as lang,",
        "category as c",
        "where", 
        "f.film_id=? and fc.film_id=f.film_id and lang.language_id=f.language_id and c.category_id=fc.category_id",
        "limit 1"
    ],
    "searchMovie":[
        "select", 
        "f.film_id,", 
        "f.title,",
        "c.name as category,",
        "description,",
        "f.replacement_cost as price",
        "from", 
        "film as f,", 
        "film_category as fc", 
        "left outer join ",
        "category as c on c.category_id = fc.category_id",
        "where",
        "(fc.film_id=f.film_id) and (f.title like ? or description like ?) and (upper(c.name)=upper(?) or ?='')",
        "order by f.title ASC",
        "limit 10",
        "offset ?"
    ],
    "movieCount":[
        "select COUNT(*) as entries",
        "from film as f, film_category as fc ",
        "where fc.film_id=f.film_id"
    ],
    "moveCountCategory":[
        "select COUNT(*) as entries",
        "from film as f, film_category as fc ",
        "left outer join category as c on c.category_id = fc.category_id",
        "where fc.film_id=f.film_id and upper(c.name)=upper(?)"
    ],
    "moveCountSearch":[
        "select COUNT(*) as entries",
        "from film as f, film_category as fc ",
        "left outer join category as c on c.category_id = fc.category_id",
        "where (fc.film_id=f.film_id) and (f.title like ? or description like ?) and (upper(c.name)=upper(?) or ?='')"
    ],
    "actorNameSearch":[
        "select actor_id, first_name, last_name  from actor" ,
        "where (CONCAT(first_name, ' ', last_name) like ?)",
        "limit 10 ",
        "offset ?;"
    ],
    "actorNameSearchCount":[
        "select COUNT(*) as entries  from  actor where (CONCAT(first_name, ' ', last_name) like ?)"
    ],
    "getMovieByActorId":[
        "select film_actor.film_id, film.title, category.name as category,",
        "film.description,",
        "film.replacement_cost as price",
        "from film_actor, film, category, film_category",
        "where film_actor.actor_id=? and film_actor.film_id=film.film_id", 
        "and category.category_id=film_category.category_id and (film_category.film_id=film.film_id)",
        "and (upper(category.name)=upper(?) or ?='')",
        "limit 10",
        "offset ?"
    ],
    "actorMovieCount":[
        "select COUNT(*) as entries",
        "from film_actor, film, category, film_category",
        "where film_actor.actor_id=? and film_actor.film_id=film.film_id", 
        "and category.category_id=film_category.category_id and (film_category.film_id=film.film_id)",
        "and (upper(category.name)=upper(?) or ?='')"
    ],
    "getActorName":[
        "select CONCAT(",
        "upper(substring(first_name,1,1)),",
        "lower(substring(first_name,2)), ' ',",
        "upper(substring(last_name,1,1)),",
        "lower(substring(last_name,2)))",
        "as name from actor where actor_id=?"
    ]
}